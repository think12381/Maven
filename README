#########
Create simple concept bean and ioc releationship

#########

declare BEAN in order to JAVA configuration

JAVA configuration @configuration -> XML
                   @Bean -> @service @controller @repository @component

@Configuration JavaConfig  聲明這裡面有0個 bean 或是 很多個bean

@Bean
FunctionService1 在創建的時候會去呼叫 functionService
返回是一個 bean 方法和class的名稱一樣

@Bean UseFunctionService 中setfunction會去注入其他的bean

所以只要在容器中有一個bean 就可以在其他地方創建


####################################################

AOP的概念 如果說OOP是由封裝繼承多形 是一種由上到下的關係
那麼AOP就是一種橫向的關係 連接各種class 在SPRING中也就是
bean的連結

AOP 主要是由
1 通知 像是  before after around 當作切點

before 方法使用之前先行呼叫 所以 就看到了 註解是攔截 add operation
after 方法使用後呼叫因此看到了 方式是攔截
around 前後都執行

2 連接點 Joint point 只要Joint point被使用到就是一個方法之間的連接

3 切點 @pointcut 聲明切點的位置


4 開啟使用 AspectAutoProxy

#########################################################

Bean scope scope 是bean如何新建的實例

scope 有以下幾種
singleton 一個容器只有一個bean的實例 共用一個 bean的實例

ex

  DemoSingletonService demoSingletonService = context3.getBean(DemoSingletonService.class);
  DemoSingletonService demoSingletonService1 = context3.getBean(DemoSingletonService.class);
  demoSingletonService = demoSingletonService1  ========> 共用

prototype 每次呼叫就產生一個bean實例

  DemoPrototypeService demoPrototypeService = context3.getBean(DemoPrototypeService.class);
  DemoPrototypeService demoPrototypeService1 = context3.getBean(DemoPrototypeService.class);
  demoPrototypeService != demoPrototypeService1 =========> 每一次呼叫就產生新的

request web中 http request 給一個 bean實例
session web中 http session 給一個 bean實例
globalsession

#########################################################

EL-spring

調用資源  引入common-io

如 字串 OS屬性 運算結果..... 網址

1 add common-io
2 @PropertySource("classpath:test.properties") 配合 PropertySourcesPlaceholderConfigurer
3 pom.xml

add path
 <resources>
            <resource>
                <directory>src/main/resource</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>

            </resource>
  </resources>
##################################################################